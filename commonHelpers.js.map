{"version":3,"file":"commonHelpers.js","sources":["../src/js/01-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst datePicker = flatpickr('#datetime-picker');\n\n  // Отримуємо кнопку Start та розміщаємо її у змінній\n  const startButton = document.querySelector('[data-start]');\n\n  // Поточна вибрана дата\n  let selectedDate = null;\n\n  // Функція для перевірки, чи дата вибрана з майбутнього\n  function isFutureDate(date) {\n    const currentDate = new Date();\n    return date.getTime() > currentDate.getTime();\n  }\n\n  // Функція для оновлення таймера\n  function updateTimer() {\n    // Отримуємо поточну дату та час\n    const currentDate = new Date();\n\n    // Розраховуємо різницю між поточною датою та вибраною датою\n    const difference = selectedDate.getTime() - currentDate.getTime();\n\n    // Якщо різниця менше або дорівнює нулю, таймер зупиняється\n    if (difference === 0) {\n      clearInterval(timerInterval);\n      difference = 0;\n\n      // Повідомлення про закінчення таймера\n      iziToast.show({\n        title: 'Timer Finished',\n        message: 'The selected time has passed.',\n        position: 'topCenter',\n        timeout: 5000,\n        progressBarColor: 'rgb(0, 255, 0)'\n      });\n    }\n\n    // Отримуємо час у форматі дні:години:хвилини:секунди\n    const days = Math.floor(difference / (1000 * 60 * 60 * 24)).toString().padStart(2, '0');\n    const hours = Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)).toString().padStart(2, '0');\n    const minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60)).toString().padStart(2, '0');\n    const seconds = Math.floor((difference % (1000 * 60)) / 1000).toString().padStart(2, '0');\n\n    // Відображаємо час у відповідні елементи інтерфейсу\n    document.querySelector('[data-days]').textContent = days;\n    document.querySelector('[data-hours]').textContent = hours;\n    document.querySelector('[data-minutes]').textContent = minutes;\n    document.querySelector('[data-seconds]').textContent = seconds;\n  }\n\n  // Обробники подій\n\n  // Коли обрано дату, перевіряємо, чи вона з майбутнього\n  datePicker.config.onChange = function(selectedDates) {\n    const date = selectedDates[0];\n    selectedDate = date;\n    if (isFutureDate(date)) {\n      startButton.disabled = false;\n      iziToast.hide();\n    } else {\n      startButton.disabled = true;\n      iziToast.error({\n        title: 'Please choose a date in the future',\n        position: 'topCenter',\n        timeout: false\n      });\n    }\n  };\n\n  // При кліку на кнопку Start, таймер запускається\n  startButton.addEventListener('click', function() {\n    if (selectedDate !== null) {\n      // Відключаємо кнопку Start\n      startButton.disabled = true;\n\n      // Встановлюємо оновлення таймера кожну секунду\n      timerInterval = setInterval(updateTimer, 1000);\n    }\n  });\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\n"],"names":["datePicker","flatpickr","startButton","selectedDate","isFutureDate","date","currentDate","updateTimer","difference","iziToast","days","hours","minutes","seconds","selectedDates","convertMs","ms"],"mappings":"sGAKA,MAAMA,EAAaC,EAAU,kBAAkB,EAGvCC,EAAc,SAAS,cAAc,cAAc,EAGzD,IAAIC,EAAe,KAGnB,SAASC,EAAaC,EAAM,CAC1B,MAAMC,EAAc,IAAI,KACxB,OAAOD,EAAK,QAAO,EAAKC,EAAY,QAAO,CAC5C,CAGD,SAASC,GAAc,CAErB,MAAMD,EAAc,IAAI,KAGlBE,EAAaL,EAAa,QAAS,EAAGG,EAAY,QAAO,EAG3DE,IAAe,IACjB,cAAc,aAAa,EAC3BA,EAAa,EAGbC,EAAS,KAAK,CACZ,MAAO,iBACP,QAAS,gCACT,SAAU,YACV,QAAS,IACT,iBAAkB,gBAC1B,CAAO,GAIH,MAAMC,EAAO,KAAK,MAAMF,GAAc,IAAO,GAAK,GAAK,GAAG,EAAE,SAAU,EAAC,SAAS,EAAG,GAAG,EAChFG,EAAQ,KAAK,MAAOH,GAAc,IAAO,GAAK,GAAK,KAAQ,IAAO,GAAK,GAAG,EAAE,SAAU,EAAC,SAAS,EAAG,GAAG,EACtGI,EAAU,KAAK,MAAOJ,GAAc,IAAO,GAAK,KAAQ,IAAO,GAAG,EAAE,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC9FK,EAAU,KAAK,MAAOL,GAAc,IAAO,IAAO,GAAI,EAAE,SAAU,EAAC,SAAS,EAAG,GAAG,EAGxF,SAAS,cAAc,aAAa,EAAE,YAAcE,EACpD,SAAS,cAAc,cAAc,EAAE,YAAcC,EACrD,SAAS,cAAc,gBAAgB,EAAE,YAAcC,EACvD,SAAS,cAAc,gBAAgB,EAAE,YAAcC,CACxD,CAKDb,EAAW,OAAO,SAAW,SAASc,EAAe,CACnD,MAAMT,EAAOS,EAAc,GAC3BX,EAAeE,EACXD,EAAaC,CAAI,GACnBH,EAAY,SAAW,GACvBO,EAAS,KAAI,IAEbP,EAAY,SAAW,GACvBO,EAAS,MAAM,CACb,MAAO,qCACP,SAAU,YACV,QAAS,EACjB,CAAO,EAEP,EAGEP,EAAY,iBAAiB,QAAS,UAAW,CAC3CC,IAAiB,OAEnBD,EAAY,SAAW,GAGvB,cAAgB,YAAYK,EAAa,GAAI,EAEnD,CAAG,EAEH,SAASQ,EAAUC,EAAI,CAQrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAE1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EAEpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EAEjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,QAAQ,IAAIE,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC"}
{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n// Отримуємо доступ до поля вибору дати\nconst input = document.querySelector('#datetime-picker');\ninput.disabled = false;\n\n// Отримуємо кнопку Start та розміщаємо її у змінній та деактивуємо її напочатку\nconst startButton = document.querySelector('[data-start]');\nstartButton.disabled = true;\n\n// Поточна вибрана дата\nlet userSelectedDate;\n\n// Додаємо опції вибору дати та перевіряємо її валідність відповідно чи є вибрана дата більшою за теперішню\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n\n  onChange(selectedDates) {\n    if (Date.now() < selectedDates[0].getTime()) {\n      startButton.disabled = false;\n      userSelectedDate = selectedDates[0];\n    } else {\n      startButton.disabled = true;\n    }\n    console.log(selectedDates[0].getTime());\n  },\n\n  onClose(selectedDates) {\n    if (Date.now() > selectedDates[0].getTime()) {\n      iziToast.error({\n        title: \"❌ You made a mistake\",\n        message: \"Please choose a date in the future\",\n      });\n    } else if (Date.now() < selectedDates[0].getTime()) {\n      startButton.addEventListener('click', () => {\n        startTimer(selectedDates[0]);\n      });\n    }\n  },\n};\n\nflatpickr(input, options);\n  \n// Після вибору валідної дати реалізовуємо конвертацію обраного інтервалу часу в указаний формат для відображення в полях таймеру на сторінці\n\nfunction startTimer(chooseDate) {\n  const days = document.querySelector('[data-days]');\n  const hours = document.querySelector('[data-hours]');\n  const minutes = document.querySelector('[data-minutes]');\n  const seconds = document.querySelector('[data-seconds]');\n\n  const intervalId = setInterval(() => {\n    const {\n      days: daysValue,\n      hours: hoursValue,\n      minutes: minutesValue,\n      seconds: secondsValue,\n    } = convertMs(chooseDate.getTime() - Date.now());\n\n      days.textContent = `${daysValue}`.padStart(2, '0');\n      hours.textContent = `${hoursValue}`.padStart(2, '0');\n      minutes.textContent = `${minutesValue}`.padStart(2, '0');\n      seconds.textContent = `${secondsValue}`.padStart(2, '0');\n\n// Запускаємо відлік часу на живій сторінці та блокуємо поле вибору дати\n\n  function timeIsUp() {\n    input.disabled = true;\n    const result =\n      parseInt(days.textContent) === 0 &&\n      parseInt(hours.textContent) === 0 &&\n      parseInt(minutes.textContent) === 0 &&\n      parseInt(seconds.textContent) === 0;\n      return result;\n    }\n\n// Після закінчення відліку обраного інтервалу часу Зупиняємо роботу таймера та очищаємо його поля і знову робимо поле вибору дати доступним, а кнопку неактивною\n\n  function stopTimer() {\n      clearInterval(intervalId);\n    }\n    if (timeIsUp() === true) {\n      stopTimer();\n      input.disabled = false;\n    }\n  }, 1000);\n  \n  startButton.disabled = true;\n  \n}\n\n// Функція для підрахунку значень між кінцевою і поточною датою, яка повертає значення в мілісекундах\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}"],"names":["input","startButton","options","selectedDates","iziToast","startTimer","flatpickr","chooseDate","days","hours","minutes","seconds","intervalId","daysValue","hoursValue","minutesValue","secondsValue","convertMs","timeIsUp","stopTimer","ms"],"mappings":"2GAMA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACvDA,EAAM,SAAW,GAGjB,MAAMC,EAAc,SAAS,cAAc,cAAc,EACzDA,EAAY,SAAW,GAMvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,SAASC,EAAe,CAClB,KAAK,IAAK,EAAGA,EAAc,GAAG,WAChCF,EAAY,SAAW,GACJE,EAAc,IAEjCF,EAAY,SAAW,GAEzB,QAAQ,IAAIE,EAAc,GAAG,QAAS,CAAA,CACvC,EAED,QAAQA,EAAe,CACjB,KAAK,IAAK,EAAGA,EAAc,GAAG,UAChCC,EAAS,MAAM,CACb,MAAO,uBACP,QAAS,oCACjB,CAAO,EACQ,KAAK,IAAK,EAAGD,EAAc,GAAG,WACvCF,EAAY,iBAAiB,QAAS,IAAM,CAC1CI,EAAWF,EAAc,EAAE,CACnC,CAAO,CAEJ,CACH,EAEAG,EAAUN,EAAOE,CAAO,EAIxB,SAASG,EAAWE,EAAY,CAC9B,MAAMC,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAQ,SAAS,cAAc,cAAc,EAC7CC,EAAU,SAAS,cAAc,gBAAgB,EACjDC,EAAU,SAAS,cAAc,gBAAgB,EAEjDC,EAAa,YAAY,IAAM,CACnC,KAAM,CACJ,KAAMC,EACN,MAAOC,EACP,QAASC,EACT,QAASC,CACf,EAAQC,EAAUV,EAAW,QAAS,EAAG,KAAK,IAAG,CAAE,EAE7CC,EAAK,YAAc,GAAGK,IAAY,SAAS,EAAG,GAAG,EACjDJ,EAAM,YAAc,GAAGK,IAAa,SAAS,EAAG,GAAG,EACnDJ,EAAQ,YAAc,GAAGK,IAAe,SAAS,EAAG,GAAG,EACvDJ,EAAQ,YAAc,GAAGK,IAAe,SAAS,EAAG,GAAG,EAI3D,SAASE,GAAW,CAClB,OAAAlB,EAAM,SAAW,GAEf,SAASQ,EAAK,WAAW,IAAM,GAC/B,SAASC,EAAM,WAAW,IAAM,GAChC,SAASC,EAAQ,WAAW,IAAM,GAClC,SAASC,EAAQ,WAAW,IAAM,CAEnC,CAIH,SAASQ,GAAY,CACjB,cAAcP,CAAU,CACzB,CACGM,EAAU,IAAK,KACjBC,IACAnB,EAAM,SAAW,GAEpB,EAAE,GAAI,EAEPC,EAAY,SAAW,EAEzB,CAIA,SAASgB,EAAUG,EAAI,CAQrB,MAAMZ,EAAO,KAAK,MAAMY,EAAK,KAAG,EAE1BX,EAAQ,KAAK,MAAOW,EAAK,MAAO,IAAI,EAEpCV,EAAU,KAAK,MAAQU,EAAK,MAAO,KAAQ,GAAM,EAEjDT,EAAU,KAAK,MAASS,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAZ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}